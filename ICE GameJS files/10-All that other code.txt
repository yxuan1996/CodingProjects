<body> 
 
 <h1> Hello! </h1> 
 
 <p> 
 
You can make <b> bold </b> words,
 
 <i> italic </i> words,
 
even <u> underlined </u> words.
 
 </p> 
 
 <p> 
 
You can link to
 
 <a href= "http://gamingJS.com" > other pages </a> .
 
You can also add images from web servers:
 
 <img src= "/images/purple_fruit_monster.png" > 
 
 </p> 
 
 </body>
 
<script src="http://gamingJS.com/Three.js"></script>
<script src="http://gamingJS.com/ChromeFixes.js"></script>
<script>
  // This is where stuff in our game will happen:
  var scene = new THREE.Scene();

  //var aspect_ratio = window.innerWidth / window.innerHeight;
  //create a camera with aspect_ratio so that it fits to different screen sizes
  //var camera = new THREE.PerspectiveCamera(75, aspect_ratio, 1, 10000);
  
  //Use an orthographic camera instead of a perspective camera for top down view
  var width = window.innerWidth,
 
  height = window.innerHeight;
 
  var camera = new THREE.OrthographicCamera(
 
  -width/2, width/2, height/2, -height/2, 1, 10000
 
  );

  //move the camera 500 pixels out  in the z direction so that we can see what's going on
  camera.position.z = 500;
  scene.add(camera);

  // This will draw what the camera sees onto the screen:
  
  //var renderer = new THREE.CanvasRenderer();
  
  //using webGL renderer instead of the normal canvas renderer
  var renderer = new THREE.WebGLRenderer();
  //Tell the renderer the size of the screen to which it will be drawing
  //The size of the view will take up the entire browser
  renderer.setSize(window.innerWidth, window.innerHeight);
  //insert the renderer into our web page (HTML body) using domElement
  document.body.appendChild(renderer.domElement);

  // ******** START CODING ON THE NEXT LINE ********
  var shape = new THREE.CubeGeometry(200, 1000, 10);
 
  var cover = new THREE.MeshBasicMaterial({color:0x990000});
 
  var road = new THREE.Mesh(shape, cover);
 
  scene.add(road);
 
  road.position.set(0, 400, 0);
 
  road.rotation.set(-Math.PI/4, 0, 0);




  // Finally, render what is drawn on the screen so that everyone can see it
  //We can choose to render repeatly to produce animation
  renderer.render(scene, camera);
</script>